{
  "name": "Android MaryTTS",
  "tagline": "Android MARY TTS - an open-source, offline HMM-Based text-to-speech synthesis system based on MaryTTS",
  "body": "# AndroidMaryTTS \r\n\r\nAndroidMaryTTS is an open source Android offline text to speech application, built on top of MaryTTS. Can use own HMM-based voice in any android application with using this lib. Just need only generated HMM-voice file. Just create your own hmm-based voice model with using MaryTTS and share with us. In final listen yourself as tts speaker with using our lib. \r\n\r\n# Development\r\n\r\nYou would need Android Studio for development, other IDEs not yet supported.\r\n\r\n# Plan \r\n\r\n#### Will do significant refactoring and modifications the core code MaryTTS \r\n\r\n1. Create new android app and add Marytts core code as module :+1:\r\n2. Change or refactor marytts source files to support android OS :+1:\r\n3. Publishing Gradle AndroidMaryTTS library to jCenter and maven repository :+1:\r\n4. Adding Russian language as supporting languages\r\n5. Marytts Android client [demo](https://github.com/AndroidMaryTTS/AndroidMaryTTS-Client) :+1:\r\n6. Creating TTS engine using AndroidMaryTTS\r\n7. Optimising AndroidMaryTTS module and make more user friendly module\r\n\r\n\r\nPrerequisites\r\n--------------\r\n\r\n- Android SDK v23\r\n- Android Build Tools v23\r\n\r\n#How to use: \r\n\r\n\r\n1) Add below script to build.gradle(app) file : \r\n```\r\n  android {\r\n  \t    defaultConfig {\r\n        \t\tmultiDexEnabled true\r\n        \t\tpackagingOptions {\r\n        \t\t    exclude 'META-INF/LICENSE.txt'\r\n        \t\t    exclude 'META-INF/NOTICE.txt'\r\n        \t\t    exclude 'META-INF/LICENSE'\r\n        \t\t    exclude 'META-INF/NOTICE'\r\n        \t\t    exclude 'META-INF/DEPENDENCIES'\r\n  \t     \t      }\r\n  \t    }\r\n  }\r\n```\r\n2) Also, other one to build.gradle (module) where tts will use : \r\n```\r\n\tdependencies {\r\n\t    compile 'com.marytts.android:marylib:1.0.1'\r\n\t}\r\n```\r\n\r\n3) Load code marytts-android voise and language models on startup your project. It takes a few seconds. But in future will be so fast : \r\n```\r\n\tMaryLink.load(Context context); \r\n```\r\n4) Last one to speak or stop what you write : \r\n```\r\n \tMaryLink.getInstance().startTTS(text);\r\n\t\r\n\tMaryLink.getInstance().stopTTS();\r\n```\r\n\r\n# Note\r\n  After testing our lib don't forget write your reaction. \r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}
# This contains the punctuation description for English.
# The regular expressions processing is based on the
# dk.brics.automaton package.
# See http://www.brics.dk/automaton/doc/dk/brics/automaton/RegExp.html
# for the abstract syntax.


DEFINITIONS:
# Format for definitions is
# <definition name> : <regular expression> : <class name>
# A definition name may contain letters, numbers and underscores
    
# possible terminal punctuation
PERIOD :		\.			: PERIOD

# terminal punctuation
EXCLAM :		!			: EXCLAM
QUEST :			\?			: QUEST

# opening punctuation
OINF :			\<\<+		: OINF
RSQUOTE_L :		``?			:RSQUOTE_L
OGUILLEMET :	«			: OGUILLEMET
# Unicode U+201C:
ODQUO1 :		“			: ODQUO1
# Unicode U+201F:
ODQUO2 :		‟			: ODQUO2
# Unicode U+201E:
ODQUO3 :		„			: ODQUO3
# Unicode U+2018:
OSQUO1 :		‘			: OSQUO1
# Unicode U+201A:
OSQUO2 :		‚			: OSQUO2
# Unicode U+201B:
OSQUO3 :		‛			: OSQUO3
# Unicode U+2039:
OSAQUO :		‹			: OSAQUO

# opening brackets
OPAR :			\(			: OPAR
OPAR2 :			\{			: OPAR2
OCROCHE :		\[			: OCROCHE

# closing punctuation
CSUP :			\>\>+		: CSUP
CGUILLEMET :	»			: CGUILLEMET
# Unicode U+201D:
CDQUO :			”			: CDQUO
# Unicode U+2019:
CSQUO :			’			: CSQUO
# Unicode U+203A:
CSAQUO :		›			: CSAQUO

# closing brackets
CPAR :			\)			: CPAR
CPAR2 :			\}			: CPAR2
CCROCHE :		\]			: CCROCHE

# ambigue opening/closing punctuation
OCQUOTE :		\"			: OCQUOTE
RSQUOTE_R :		''?			: RSQUOTE_R

# This is a matcher for the special case when two internal
# punctuations don't cause a split; it's used for
# abbreviations in composita.
SPECIAL_INT :	\.-			: SPECIAL_INT

# other punctuation
LT :			\<			: LT
GT :			\>			: GT
EQ :			=			: EQ
OCHYPHEN :		--+			: OCHYPHEN
# Unicode U+2012:
FIGDASH :		‒			: FIGDASH
# Unicode U+2013:
ENDASH :		–			: ENDASH
# Unicode U+2014:
EMDASH :		—			: EMDASH
# Unicode U+2015:
HBAR :			―			: HBAR
BULLET :		•|■|□		: BULLET
PERCENT :		%			: PERCENT
TM :			©|®|™		: TM
SECTION :		§			: SECTION

HYPHEN :		-			: HYPHEN
SCOLON :		;			: SCOLON
COLON :			:			: COLON
COMMA :			,			: COMMA
SLASH :			\/			: SLASH
BSLASH :		\\			: BSLASH
PIPE :			\|			: PIPE
STAR :			\*			: STAR
TILDE :			\~			: TILDE
AMP :			\&			: AMP
AT :			\@			: AT

RULES:
# These are the mandatory rules defined as
# regular expressions using the definitions above.
# Format for rules is
# <rule name> : <regular expression> : <optional class name>
# A definition can be referred in a rule regular expressions via
# its name in angle brackets.
# Rule names may not be altered!
# The default behavior is to treat the punctuation
# defined above as breaking punctuation, that is
# this punctuations are always used as separator
# and never as part of clitics or abbreviation.

# punctuation which can be found in compounds
INTERNAL_PUNCT_RULE :		<SPECIAL_INT>|<RSQUOTE_R>|<HYPHEN>|<PERIOD>|<COMMA>|<AMP>|<SLASH>|<COLON>|<AT>		:

# punctuation which can be found only within text units, e.g. sentences
INTERNAL_TU_PUNCT_RULE :	<COMMA>|<SCOLON>|<COLON>		:

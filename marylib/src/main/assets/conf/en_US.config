##########################################################################
# Copyright 2000-2009 DFKI GmbH.
# All Rights Reserved.  Use is subject to license terms.
#
# This file is part of MARY TTS.
#
# MARY TTS is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, version 3 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
##########################################################################
# MARY TTS configuration file.
##########################################################################

name = en_US
en_US.version = 4.3.0

# Declare "group names" as component that other components can require.
# These correspond to abstract "groups" of which this component is an instance.
provides = a-language

# List the dependencies, as a whitespace-separated list.
# We can require a component by name or by an abstract "group name" 
# as listed under the "provides" element.
requires = \
    marybase \
    
    en_US-voice
    
# For each required component, an optional minimum version and an optional
# download url can be given.
requires.marybase.version = 4.3.0
requires.en_US-voice.version = 4.3.0


###########################################################################
############################## The Modules  ###############################
###########################################################################
# For keys ending in ".list", values will be appended across config files,
# so that .list keys can occur in several config files.
# For all other keys, values will be copied to the global config, so
# keys should be unique across config files.


# Java classes to use as the modules, as a whitespace-separated list.
# These have to implement marytts.modules.MaryModule.
# For each input type + output type, only one Module may be listed
# across all components, or an Exception will be thrown.
# No particular order is required -- a processing pipeline from input data type
# to output data type will be computed on-line.

modules.classes.list = \
        marytts.language.en.JTokeniser \
        marytts.language.en.FreeTTSTokenToWords \
        marytts.modules.JPhonemiser(en_US.) \
        marytts.language.en.Prosody \
        marytts.modules.SimplePhoneme2AP(en_US) \
        marytts.language.en.Utt2XMLTokensEn \
        marytts.language.en.Utt2XMLWordsEn \
        marytts.language.en.Utt2XMLPosEn \
        marytts.language.en.Utt2XMLSegmentsEn \
        marytts.language.en.XML2UttTokensEn \
        marytts.language.en.XML2UttWordsEn \
        marytts.language.en.XML2UttPosEn \
        marytts.language.en.PronunciationModel \
        marytts.modules.OpenNLPPosTagger(en,en.pos) \


####################################################################
####################### Module settings  ###########################
####################################################################

en_US.allophoneset = jar:/marytts/language/en_US/lexicon/allophones.en_US.xml

en_US.userdict = MARY_BASE/user-dictionaries/userdict-en_US.txt
en_US.lexicon = jar:/marytts/language/en_US/lexicon/cmudict.fst
en_US.lettertosound = jar:/marytts/language/en_US/lexicon/cmudict.lts

en.pos.model = jar:/marytts/language/en/tagger/en-pos-maxent.bin
#en.pos.posMap = MARY_BASE/lib/modules/en/tagger/posMap.txt


en.prosody.paragraphdeclination = true
# rules for prediction of ToBI tones
en.prosody.tobipredparams = jar:/marytts/language/en/prosody/tobipredparams_english.xml
# rules for accent priorities of pos
en.prosody.accentPriorities = jar:/marytts/language/en/prosody/POSAccentPriorities.en.properties
# copy the word accents to the first accented syllable
en.prosody.syllableaccents = true

# Defines how many units should be selected in cart on backtrace
# The higher the number, the closer synthesis comes to pure unit selection 
en_US.cart.backtrace = 500 


# en_US feature processor manager
featuremanager.classes.list = \
	marytts.features.FeatureProcessorManager(en_US)



